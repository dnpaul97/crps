{
  "components": {
    "1": {
      "id": "1",
      "type": "lab.canvas.Screen",
      "content": [],
      "viewport": [
        800,
        600
      ],
      "files": {
        "rows": []
      },
      "responses": {
        "rows": [
          [
            "",
            "",
            "",
            ""
          ]
        ]
      },
      "parameters": {
        "rows": [
          [
            {
              "name": "",
              "value": "",
              "type": "string"
            }
          ]
        ]
      },
      "messageHandlers": {
        "rows": [
          [
            {
              "title": "",
              "message": "before:prepare",
              "code": "circleX = [0, 100]\r\ncircleY = [150, 150]\r\n\r\ncolors = ['red', 'blue', 'magenta'];\r\n\r\nradi = 44\r\ndotSize = 10\r\n\r\n// define center of the currently tested item\r\ntestX = circleX[0];\r\ntestY = circleY[0];\r\n\r\ndotDist = 30\r\n\r\n// define that the dot will appear there\r\nrelX = testX;\r\nrelY = testY;\r\n\r\n// at onset, participant is not dragging the dot\r\nisDragging = false\r\n\r\n// Define what happens when mouse is pressed down\r\nthis.options.events['mousedown'] = (e) => {\r\n  if(!isDragging){\r\n  //tell the browser we are handling the event\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    // relative position of the mouse in relation to screen center\r\n[mouseX, mouseY] = this.transformInverse([e.clientX, e.clientY])\r\n    // check whether mouse is on the shape\r\n    distance = Math.round(Math.abs(Math.sqrt(Math.pow((mouseX-relX), 2)+Math.abs(Math.pow((mouseY-relY), 2)))));\r\n    console.log(distance)\r\n    if(distance<dotDist){         \r\n        // set the isDragging flag\r\n        isDragging=true;\r\n        console.log(isDragging);      \r\n        }          \r\n      }\r\n  \r\n}\r\n\r\n// Define what happens when mouse is moved (if dragging is on)\r\nthis.options.events['mousemove'] = (e) => {\r\n  // return if we're not dragging\r\n  if(!isDragging){return;}\r\n  //tell the browser we are handling the event\r\n  e.preventDefault();\r\n  e.stopPropagation();\r\n  // relative position of the mouse in relation to screen center\r\n  [mouseX, mouseY] = this.transformInverse([e.clientX, e.clientY])\r\n  \r\n  \r\n  relX = Math.round(mouseX);\r\n  relY = Math.round(mouseY);  \r\n}\r\n\r\n// Define what happens when mouse is pressed down\r\nthis.options.events['mouseup'] = (e) => {\r\n  // return if we're not dragging\r\n  if(!isDragging){return;}\r\n  //tell the browser we are handling the event\r\n  e.preventDefault();\r\n  e.stopPropagation();\r\n  // the drag is over -- clear the isDragging flag\r\n  isDragging=false; \r\n  \r\n    // compute angle selected\r\n    angle = getDirection(relX,relY, testX, testY);\r\n    console.log(angle);\r\n    \r\n    // because of the way the triangle drawing is oriented, position is always at 90 degrees offset\r\n    responseAngle = (angle+180)%360; \r\n    console.log(responseAngle);\r\n    this.end();     \r\n}\r\n\r\nfunction getDirection(x1, y1, pX, pY) {\r\n    angle = Math.atan2(pY-y1, pX-x1) * 180 / Math.PI;\r\n    if(angle < 0){angle += 360}    \r\n    return (angle);\r\n}\r\n\r\n// Function to draw the content as defined via the visual builder\r\n// (this is digging in the lab.js internals, which may change\r\n// sometime)\r\nconst baseRenderFunction = lab.util.canvas.makeRenderFunction(\r\n  this.options.content.filter(c => c.type !== 'aoi'),\r\n  this.internals.controller.cache\r\n)\r\n\r\n/************\r\n * Render\r\n */\r\n// function to draw the ring-dot stimuli\r\nthis.options.renderFunction = function(ts, canvas, ctx, obj) {\r\n\r\ni = 0; // define the item to be recalled\r\n// Render the base layer\r\nbaseRenderFunction(ts, canvas, ctx, obj);\r\n\r\n// Draw the ring\r\ndrawRing(circleX, circleY, radi, colors,i);\r\n// Draw edge dot\r\ndrawDot(relX, relY, dotSize, colors, i);\r\n// Queue rerender on next frame\r\nthis.queueAnimationFrame()\r\n \r\n\r\n  function drawRing(X, Y, dotSize, colors, index){ \r\n    ctx.beginPath();\r\n    ctx.arc(X[index], Y[index], dotSize, 0, 2 * Math.PI, false);  \r\n    ctx.closePath();\r\n    myColor = colors[index];\r\n    ctx.lineWidth = 3;\r\n    ctx.strokeStyle = myColor;\r\n    ctx.stroke();\r\n  }\r\n\r\n  function drawDot(dotX, dotY, dotSize, colors, index){ \r\n    ctx.beginPath();\r\n    ctx.arc(dotX, dotY, dotSize, 0, 2 * Math.PI, false);  \r\n    ctx.closePath();\r\n    myColor = colors[index];\r\n    ctx.fillStyle = myColor;\r\n    ctx.fill();\r\n  }\r\n\r\n  \r\n}\r\n"
            }
          ]
        ]
      },
      "title": "Drag 1",
      "_tab": "Scripts"
    },
    "2": {
      "id": "2",
      "type": "lab.canvas.Screen",
      "content": [
        {
          "type": "i-text",
          "version": "3.5.1",
          "originX": "center",
          "originY": "center",
          "left": 0,
          "top": 0,
          "width": 727.47,
          "height": 36.16,
          "fill": "black",
          "stroke": null,
          "strokeWidth": 1,
          "strokeDashArray": null,
          "strokeLineCap": "butt",
          "strokeDashOffset": 0,
          "strokeLineJoin": "round",
          "strokeMiterLimit": 4,
          "scaleX": 1,
          "scaleY": 1,
          "angle": 0,
          "flipX": false,
          "flipY": false,
          "opacity": 1,
          "shadow": null,
          "visible": true,
          "clipTo": null,
          "backgroundColor": "",
          "fillRule": "nonzero",
          "paintFirst": "fill",
          "globalCompositeOperation": "source-over",
          "transformMatrix": null,
          "skewX": 0,
          "skewY": 0,
          "text": "Drag the dot into a position in the ring: click to start!",
          "fontSize": 32,
          "fontWeight": "normal",
          "fontFamily": "sans-serif",
          "fontStyle": "normal",
          "lineHeight": 1.16,
          "underline": false,
          "overline": false,
          "linethrough": false,
          "textAlign": "center",
          "textBackgroundColor": "",
          "charSpacing": 0,
          "id": "5",
          "styles": {}
        }
      ],
      "viewport": [
        800,
        600
      ],
      "files": {
        "rows": []
      },
      "responses": {
        "rows": [
          [
            "",
            "click",
            "",
            ""
          ]
        ]
      },
      "parameters": {
        "rows": [
          [
            {
              "name": "",
              "value": "",
              "type": "string"
            }
          ]
        ]
      },
      "messageHandlers": {
        "rows": [
          [
            {
              "title": "",
              "message": "",
              "code": ""
            }
          ]
        ]
      },
      "title": "Start",
      "_tab": "Content"
    },
    "root": {
      "id": "root",
      "title": "root",
      "type": "lab.flow.Sequence",
      "children": [
        "2",
        "1"
      ],
      "parameters": {
        "rows": [
          [
            {
              "name": "",
              "value": "",
              "type": "string"
            }
          ]
        ]
      },
      "plugins": [
        {
          "type": "lab.plugins.Metadata"
        }
      ],
      "metadata": {
        "title": "Example_Drag",
        "description": "",
        "repository": "",
        "contributors": ""
      }
    }
  },
  "version": [
    20,
    1,
    1
  ],
  "files": {
    "files": {
      "index.html": {
        "content": "data:text/html,%3C!doctype%20html%3E%0A%3Chtml%3E%0A%3Chead%3E%0A%20%20%3Cmeta%20charset%3D%22utf-8%22%3E%0A%20%20%3Ctitle%3EExperiment%3C%2Ftitle%3E%0A%20%20%3C!--%20viewport%20setup%20--%3E%0A%20%20%3Cmeta%20name%3D%22viewport%22%20content%3D%22width%3Ddevice-width%2C%20initial-scale%3D1%22%3E%0A%20%20%3C!--%20lab.js%20library%20and%20experiment%20code%20--%3E%0A%20%20%24%7B%20header%20%7D%0A%3C%2Fhead%3E%0A%3Cbody%3E%0A%20%20%3C!--%20If%20you'd%20rather%20have%20a%20container%20with%20a%20fixed%20width%0A%20%20%20%20%20%20%20and%20variable%20height%2C%20try%20removing%20the%20fullscreen%20class%20below%20--%3E%0A%20%20%3Cdiv%20class%3D%22container%20fullscreen%22%20data-labjs-section%3D%22main%22%3E%0A%20%20%20%20%3Cmain%20class%3D%22content-vertical-center%20content-horizontal-center%22%3E%0A%20%20%20%20%20%20%3Cdiv%3E%0A%20%20%20%20%20%20%20%20%3Ch2%3ELoading%20Experiment%3C%2Fh2%3E%0A%20%20%20%20%20%20%20%20%3Cp%3EThe%20experiment%20is%20loading%20and%20should%20start%20in%20a%20few%20seconds%3C%2Fp%3E%0A%20%20%20%20%20%20%3C%2Fdiv%3E%0A%20%20%20%20%3C%2Fmain%3E%0A%20%20%3C%2Fdiv%3E%0A%3C%2Fbody%3E%0A%3C%2Fhtml%3E%0A",
        "source": "library"
      },
      "style.css": {
        "content": "data:text/css,%2F*%20Please%20define%20your%20custom%20styles%20here%20*%2F",
        "source": "library"
      }
    },
    "bundledFiles": {
      "lib/lab.js": {
        "type": "application/javascript"
      },
      "lib/lab.js.map": {
        "type": "text/plain"
      },
      "lib/lab.fallback.js": {
        "type": "application/javascript"
      },
      "lib/lab.legacy.js": {
        "type": "application/javascript"
      },
      "lib/lab.legacy.js.map": {
        "type": "text/plain"
      },
      "lib/lab.css": {
        "type": "text/css"
      },
      "lib/loading.svg": {
        "type": "image/svg+xml"
      }
    }
  }
}